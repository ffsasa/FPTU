1. Verification vs validation
- Verification là quá trình đánh giá các tài liệu đặc tả,... để đảm bảo phần mềm được tạo ra sẽ đáp ứng đúng yêu cầu. Nó trả lời cho câu hỏi "We are building the product right?" -> Cách làm đúng hay không?
- Validation là quá trình kiểm thử động, chạy phần mềm để đảm bảo phần mềm được tạo ra sẽ có phù hợp với các yêu cầu hay không? "We are building the right product?" -> Làm ra đúng sản phầm không?

2. QA vs QC
- QA(quality assurance) là người đảm bảo đội ngũ là việc đúng quy trình, không quan tâm là trong quy trình đó chất lượng như thế nào.
- QC(quality control) là người đảm bảo đội ngũ làm việc đúng chất lượng của mỗi bước.
- Quality management: Quản lý chất lượng là quản lý về mọi mặt kể cả quality assurance, và quality control.

3. Một số khái niệm
- Reliability(độ tin cậy): xác suất mà phần mềm sẽ không gây ra lỗi cho hệ thống trong một thời gian nhất định trong các điều kiện xác định.
- Root cause: Nguồn gốc của lỗi nếu bị loại bỏ thì cái loại lỗi đó sẽ giảm đáng kể hoặc biến mất. Nó sẽ tránh số lượng lớn lỗi trong tương lai.

4. Vì sao có lỗi xảy ra?
- Time pressure
- Human fallibility
- Lack of experience
- Miscommunication
- Complexity of work products
- System interactions
- New technologies
- Environmental conditions

5. 7 Nguyên lý testing
- Kiểm thử phần mềm là để chứng minh sự hiện diện của lỗi, chứ không phải để chứng minh phần mềm không có lỗi. Có lập trình là có lỗi, không bao giờ không có bug.
- Exhaustive testing is impossible: Kiểu thử toàn diện là điều không thể xảy ra. Việc kiểm thử tất cả đầu vào và đầu ra với tất cả kịch bản là không thể. Phần tích rủi ro để tập trung kiểm thử vào những điểm dễ bị lỗi hơn, cần thiết hơn.
- Kiểm thử càng sớm càng tốt
- Defect clustering: Đây là nguyên lý 80-20 -> 80% lỗi được tìm thấy trong 20% của hệ thống và ngược lại 20% lỗi còn lại được tìm thấy trong 80% hệ thống. Vì vậy cần xác định các modul tiềm ẩn rủi ro và tập trung kiểm thử ở những khu vực đó.
- Pesticides paradox: Nghịch lý thuốc trừ sâu. Sự dụng lặp đi lặp lại một bộ test case sẽ khó kiếm được lỗi hơn. Vì hệ thống càng lúc càng hoàn thiện, các lỗi cũ đã được sửa thế nhưng vẫn dùng các test case cũ. -> Sự chủ quan. Cần liên tục cải hiện các phương pháp hiện có để có thể kiểm thử hiệu quả hơn.
- Test is context denpendent: Kiểm thử phải phụ thuộc vào ngữ cảnh của phần mềm. Test trên đt sẽ khác test trên máy tính. Ví dụ: 1 phần mềm test trên máy tính đã rất ổn, nhưng không có nghĩa responsive trên đt sẽ không bị bay nút.
- Absence of errors fallacy: Ảo tưởng không có lỗi, nếu chúng ta tạo ra 1 phần mềm chất lượng cao 99% không có lỗi nhưng không đáp ứng được nhu cầu của người dùng thì nó vẫn không thể sử dụng.


I. OOP - OBEJECT ORIENTED PARADIGM
			  PROGRAMMING
- Tư duy lập trình hướng về đối tượng
- Việc viết code thuần dùng đối tương, đi tìm các đối tương trong quá tình lập trình, viết code

1. Before oop là procedural programming language - ngôn ngữ lập trình theo style thủ tục
- Thủ tục bao gồm các công việc, các bước là 1 nhóm các công việc, các bước để làm được 1 câu chuyện, 1 kết quả gì đó
- Lập trình thủ tục là lập trình mà ta đi xây dựng các hàm/function/các procedure(hàm trả về void)
- 2 ngôn ngữ nổi tiếng style này là: C, pascal

PROGRAM TIÊU BIỂU THEO STYLE PROCEDURAL/PROCEDURE LÀ:
#include<tên thư viện cần dùng>   ->import,using

//khai báo các biến luôn -> biến toàn cục -> global variables

int yob=2003;

//khai báo các hàm - xử lí các biến - biến toàn cục - nằm ngoài mọi hàm
		   - xử lí các biến - biến nằm trong hàm - biến local

int getAge(){
	return 2024-yob;
}

void F(int newYob){
	yob = newYob;
}

voi F1(){
	scanf("%d", &yob); //Nhập giá trị cho yob
}

int main(){
// cuộc chơi chính nằm ở main() gopij các hàm
}

//Style code: tự do chế các hàm, tự do khai báo biến, local hay global
//Dễ viết, thích hàm thì có hàm
//Dễ bảo trì??? biến và hàm để tự do
		side effect - hiện ứng phụ, hiệu ứng lề
		1 biến toàn ucjc có thể bị thay đổi bởi nhiều hàm kahcs nhau
		giá trị của biến toàn cục bị thay đổi bởi cách dùng hàm

"DỮ LIỆU VÀ XỬ LÍ DỮ LIỆU - HÀM - NÊN CÓ 1 LOGIC THIẾU KẾ, NHỮNG THỨ LIÊN QUAN NÊN Ở CÙNG NHAU"


2. Tư duy oop - ngôn ngữ lập trình style hướng về đối tượng
*Đối tượng Object là gì?
 => Vạn vật quanh ta - thing (mở rộng IOT - Internet vạn vật, vạn vật kết nối qua Internet)

- Được mô tả theo 2 style, vạn vật quanh ta đến theo 2 hình dạng, 2 form, được thể hiện, biểu diễ theo 2 hình thức khác nhau

2.1. Single value - giá trị đơn	
- 10%
- 3.14
- 50mk/h
=> Mình nó mang 1 giá trị, không bình luận thêm
2.2. Complex value - giá trị phức tạp, phức hợp
CR7
  Name: CR7
  Yob: 1985
  Home: Portugal
  Award: ???
  Goals: ???		
=> Khi nói về nó ta cần nhiều info hơn, sigle value, complex value khác để kể về cái thing ngày, nó có nhiều đặc điểm được liệt kê ra attribute.

- Thứ phức tạp, cần nhiều câu chữ để mo ta, nó có nhiều đặc điểm để mô ta, gọi là object
=> Vật object: là 1 thứ quanh ta, nhận diện nó qua các đặc điểm ( chứa trong nó nhiều info có thể là giá trị đơn hay phức tạp khác)
=> Để dễ dàng quản lý các đối tượng phức tạp: chia để trị. Tức là ta phân loại, gom nhóm, chia nhóm.

- Chia nhóm chẳng qua là ta phân lọa các object theo điểm chung của chúng, chúng chia sẻ những đặc điểm chung nào, nếu có đặc điểm chung, gom ra 1 chỗ, đặt cho nhóm đó 1 các tên việc chia nhóm, tìm ra tên nhóm gọi là tìm class, phân hạng các object về 1 chỗ

- Class -> Tên gọi chung cho 1 nhóm object có điểm tưởng đồng
- Class là 1 template, blueprint (Phác thảo/thiết kế chung nhất)), mold (khuôn) chứa sẵn những place-holder, điển thông tin vào -> ta có được object thuộc class

- Class là cái khung dùng để clone ra object thuộc cùng nhóm

===============================================================
OOP PROCESS
1. Nhận diện quanh ta, quanh bài toán ta cần làm các object/thứ phức tạp được mô tả = nhiều lời nhiều đặc điểm
2. Gom nhóm, phân hạng, chia cụm, phân loại -> TÌm ra tên nhóm, tìm ra class. Tạo ra class chính là tạo ra cái khuôn cái form, cái template
3. Lát hồi tư khuôn clone lại object mới ra nhập hội

-OOP là phương phát lập trình ta đi mô hình hóa các đối tượng trong bài toán thực tế, biểu diễn nó thành các đối tượng, class trong máy tính.
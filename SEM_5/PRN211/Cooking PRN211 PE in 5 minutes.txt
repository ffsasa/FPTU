RECIPE FOR COOKING A PRACTICAL EXAM APP IN 5 MINUTES *********************************

I. CREATE A SOLUTION FOLLOWING THE NAMING CONVENTION AS IN THE EXAM PAPER INSTRUCTION
* PUT YOUR WORK IN A FOLDER IN THE DESKTOP
* THE NAME OF SOLUTION, MAIN-GUI PROJECT: ..._YOURNAME

II. CREATE 3 DIFFERENT PROJECTS

1. WINDOWS FORMS APP/PROJECT, WITH NAME:  ..._YOURNAME (SEE THE INSTRUCTION IN THE EXAM PAPER) 
* Choose: .NET 8.

2. CLASS LIBRARY APP/Project, WITH NAME: Repositories
* Choose: .NET 8.

3. CLASS LIBRARY APP/Project, WITH NAME: Services
* Choose: .NET 8.

>>>>> ADD CÁI DEPENDENCY/REFERENCE GIỮA CÁC PROJECT CÓ PHỤ THUỘC VỚI NHAU

>>>>> 1. TỪ PROJECT SERVICES TRỎ SANG, ADD TỚI REPOSITORIES (chọn Option: Copy Local)

>>>>> 2. TỪ PROJECT GUI TRỎ SANG, ADD TỚI SERVICES (chọn Option: Copy Local)

III. CHECKING THE SQL SERVER CONFIGURATION & SERVICES: SEE THE Database First_Step by Step.txt 
* TCP/IP Protocol Enable
* Port 1433
* SQL Server Browser Service: Manual/Automatic | Running !!!!!!!!!!!!!!

IV. RUN .SQL SCRIPT TO CREATE DATABASE
* JUST open the .sql file (attached with the exam paper) and F5 in SQL Server Management Studio to create the database

V. INSTALL EF CORE CLI (COMMAND LINE TOOL)
   (JAVA: JDBC ~ C#: ADO.NET) -> SQL STATEMENT - GÕ LỆNH SQL
   (JAVA: HIBERNATE ~ C#: EF CORE)             - OOP, ORM
                                               - WHERE LINQ, STREAM API

1. Open Command Line/Command Prompt (type cmd in Search box in the Taskbar)

> dotnet tool install --global dotnet-ef --version 8.*
> dotnet tool install --global dotnet-ef                 //install the latest version

2. CHECK result: 
> dotnet tool list --global
> dotnet-ef

3. UNINSTALL EF CORE CLI
> dotnet tool uninstall dotnet-ef -g
 





>>>>>>>>>>>>>>>> Bắt đầu <<<<<<<<<<<<<<<<<<<<<<<<



VI. Tải 4 thư viện để kết nối db
> Microsoft.EntityFrameworkCore
> Microsoft.EntityFrameworkCore.Design
> Microsoft.EntityFrameworkCore.Tools
> Microsoft.EntityFrameworkCore.SqlServer

1. Right click in the Repositories project | Manage NuGet Packages
2. In Browse tab  
3. Choose 4 packages | Click Install 
4. Check the result: Repository | Dependency | Packages
5. Sau khi tải 4 thư viện phải build solution


VII.Tạo ra các entity class từ database đã tạo trước đó (tạo database dùng file .sql trong đề thi)

1. In Repositories project | Right click | Open in Terminal | To see the Power Shell cmd tool

2.Lấy chuỗi lệnh generate Entity class từ đề thi 

3. Sử dụng lệnh dưới trong terminal để vừa kết nối vừa tạo ra luôn đối tượng Entity. SỬA LẠI TÊN DB VÀ USERNAME PASSWORD

> CHÚ Ý PHẢI TẢI DB TRƯỚC

> SỬA LẠI TÊN DB VÀ USERNAME PASSWORD

> dotnet ef dbcontext scaffold "Server=(local);Database= BookManagementDb;UID=sa;PWD=sa123456;TrustServerCertificate=True" "Microsoft.EntityFrameworkCore.SqlServer" --output-dir "Entities" --context-dir ".\"

4. Hit Enter to see the result

5. Check the result in Repositories project
- 3 CLASS CORRESPONDING WITH 3 TABLES
- DbContext class stands for the DATABASE SERVER!!!



VIII. NO HARD-CODED CONNECTION STRING!!! Chỉnh sửa lần cuối để giấu đường dẫn kết nối db
PHẦN NÀY KHÔNG LẤY LỆNH Ở ĐÂY MÀ LẤY LỆNH TRONG ĐỀ SỬA LẠI TÊN DB VÀ USERNAME PASSWORD

0. Tải trước 2 thư viện sau:
> Microsoft.Extensions.Configuration
> Microsoft.Extensions.Configuration.Json

1. Create a separate configuration file named: "appsettings.json" in GUI PROJECT
* Right click on GUI PROJECT | Add New Item | Search json
| Choose JavaScript JSON | Type file name: appsettings.json

* Click in the .json file | Properties | Copy to Output Directory | Choose "Copy if newer"
Ở ĐÂY PHẢI CHỌN COPY IF NEWER GIỐNG COPY LOCAL ĐỐI VỚI PROJECT ĐƯỢC DEPENDEDNCY 

2.Copy nội dung file cấu hình từ đề thi, và modify cho phù hợp máy mình

> PHẦN NÀY NÊN LẤY TRONG ĐỀ THI

{
  "ConnectionStrings": {
    "DBDefault": "Data Source=(local);Initial Catalog=BookManagementDb;User ID=sa;Password=sa123456;Trusted_Connection=True;Trust Server Certificate=True"
  }
}

3. Chỉnh sửa file DbContext để đọc đc info từ file cấu hình. Copy code từ đề thi)

> PHẦN NÀY NÊN LẤY TRONG ĐỀ THI
 
* private string? GetConnectionString()
        {
            IConfiguration configuration = new ConfigurationBuilder()
                    .SetBasePath(Directory.GetCurrentDirectory())
                    .AddJsonFile("appsettings.json", true, true).Build();
            return configuration["ConnectionStrings:DBDefault"];
        }

* UPDATE method: OnConfiguring() to call the method GetConnectionString() by replace the hard-coded Connection String




5. Cẩn thận về lỗi chính tả trong phương pháp đọc tệp .json!!!

IX. CODE CHO KHO - CÁC PHƯƠNG PHÁP CƠ BẢN ĐỂ LÀM VIỆC TRỰC TIẾP VỚI CƠ SỞ DỮ LIỆU

=>>>>>>>>> GIỜ THÌ BẬT BÙA CỦA THẦY LÊN VÀ LÀM VIỆC
















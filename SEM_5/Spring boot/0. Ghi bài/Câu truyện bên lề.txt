ORM (Object-Relational Mapping): Là lý thuyết và kỹ thuật ánh xạ đối tượng từ mã nguồn (cụ thể là các đối tượng Java) sang cơ sở dữ liệu quan hệ. Mục tiêu là làm cho việc tương tác với cơ sở dữ liệu trở nên thuận tiện hơn bằng cách sử dụng đối tượng thay vì truy vấn SQL trực tiếp.

Java Persistence API (JPA): Là một tiêu chuẩn của Java, cung cấp một tập hợp các annotations, quy tắc và interfaces để đơn giản hóa việc thực hiện ORM trong ứng dụng Java. JPA định nghĩa các khái niệm như EntityManager, Entity, Persistence Unit, và các annotations như @Entity, @Id, @GeneratedValue để mô tả ánh xạ giữa đối tượng và cơ sở dữ liệu.

Hibernate: Là một triển khai cụ thể của JPA. Hibernate sử dụng các annotations, quy tắc, và interfaces mà JPA định nghĩa để triển khai ORM. Hibernate cung cấp một số tính năng bổ sung và mở rộng, như lazy loading, caching, và cơ chế ánh xạ linh hoạt.

Spring Data JPA: Là một phần mở rộng của Spring Framework để đơn giản hóa việc sử dụng JPA trong môi trường Spring. Spring Data JPA tự động hóa việc triển khai các repository dựa trên JPA, giúp tự động tạo CRUD operations và các truy vấn tùy chỉnh mà không cần phải viết mã nguồn thủ công.

ORM -> JPA -> Hibernate -> Spring Data JPA -> Spring Data REST

=========================================================

@Controller trả về 1 file HTML 
@RESTController trả về dữ liệu thô: JSON, XML
1. Clustered Index (Ch·ªâ m·ª•c c·ª•m) v√† Non-Clustered Index (Ch·ªâ m·ª•c kh√¥ng c·ª•m)

Clustered Index (Ch·ªâ m·ª•c c·ª•m)
Clustered Index l√† c√°ch s·∫Øp x·∫øp d·ªØ li·ªáu th·ª±c t·∫ø trong b·∫£ng. H√£y t∆∞·ªüng t∆∞·ª£ng b·∫°n c√≥ m·ªôt cu·ªën s√°ch, v√† clustered index l√† c√°ch c√°c trang trong cu·ªën s√°ch ƒë∆∞·ª£c s·∫Øp x·∫øp theo m·ªôt th·ª© t·ª± nh·∫•t ƒë·ªãnh. Ch·ªâ c√≥ m·ªôt c√°ch duy nh·∫•t ƒë·ªÉ s·∫Øp x·∫øp c√°c trang c·ªßa cu·ªën s√°ch n√†y (v√≠ d·ª•, theo th·ª© t·ª± s·ªë trang).
Trong c∆° s·ªü d·ªØ li·ªáu, khi b·∫°n t·∫°o m·ªôt clustered index tr√™n m·ªôt b·∫£ng, d·ªØ li·ªáu c·ªßa b·∫£ng s·∫Ω ƒë∆∞·ª£c l∆∞u tr·ªØ tr·ª±c ti·∫øp theo th·ª© t·ª± c·ªßa c·ªôt b·∫°n ch·ªçn l√†m clustered index. V√¨ d·ªØ li·ªáu ch·ªâ c√≥ th·ªÉ ƒë∆∞·ª£c s·∫Øp x·∫øp theo m·ªôt c√°ch duy nh·∫•t, n√™n m·ªôt b·∫£ng ch·ªâ c√≥ th·ªÉ c√≥ m·ªôt clustered index.
V√≠ d·ª• v·ªÅ Clustered Index:
Gi·∫£ s·ª≠ b·∫°n c√≥ b·∫£ng SinhVien v·ªõi c√°c c·ªôt: MaSinhVien, HoTen, NgaySinh.
B·∫°n t·∫°o m·ªôt clustered index tr√™n c·ªôt MaSinhVien. ƒêi·ªÅu n√†y c√≥ nghƒ©a l√† d·ªØ li·ªáu th·ª±c t·∫ø c·ªßa b·∫£ng s·∫Ω ƒë∆∞·ª£c s·∫Øp x·∫øp theo th·ª© t·ª± MaSinhVien.
Khi b·∫°n t√¨m ki·∫øm sinh vi√™n d·ª±a tr√™n MaSinhVien, c∆° s·ªü d·ªØ li·ªáu c√≥ th·ªÉ d·ªÖ d√†ng t√¨m ra v·ªã tr√≠ c·ªßa d·ªØ li·ªáu v√¨ d·ªØ li·ªáu ƒë√£ ƒë∆∞·ª£c s·∫Øp x·∫øp theo th·ª© t·ª± n√†y.

Non-Clustered Index (Ch·ªâ m·ª•c kh√¥ng c·ª•m)
Non-Clustered Index gi·ªëng nh∆∞ m·ª•c l·ª•c c·ªßa m·ªôt cu·ªën s√°ch. M·ª•c l·ª•c kh√¥ng thay ƒë·ªïi th·ª© t·ª± th·ª±c t·∫ø c·ªßa c√°c trang trong cu·ªën s√°ch m√† ch·ªâ l√† m·ªôt danh s√°ch ri√™ng bi·ªát ch·ªâ d·∫´n cho b·∫°n bi·∫øt th√¥ng tin b·∫°n c·∫ßn n·∫±m ·ªü ƒë√¢u.
Non-Clustered Index kh√¥ng thay ƒë·ªïi th·ª© t·ª± d·ªØ li·ªáu th·ª±c t·∫ø trong b·∫£ng. N√≥ ch·ªâ l√† m·ªôt danh s√°ch ri√™ng bi·ªát gi√∫p tra c·ª©u v·ªã tr√≠ d·ªØ li·ªáu nhanh h∆°n. B·∫°n c√≥ th·ªÉ c√≥ nhi·ªÅu non-clustered index tr√™n m·ªôt b·∫£ng.
V√≠ d·ª• v·ªÅ Non-Clustered Index:
V·∫´n l√† b·∫£ng SinhVien, ngo√†i vi·ªác s·∫Øp x·∫øp b·∫£ng theo MaSinhVien (clustered index), b·∫°n mu·ªën t√¨m ki·∫øm nhanh theo HoTen.
B·∫°n t·∫°o m·ªôt non-clustered index tr√™n c·ªôt HoTen. B√¢y gi·ªù, c∆° s·ªü d·ªØ li·ªáu s·∫Ω t·∫°o m·ªôt "m·ª•c l·ª•c" ri√™ng bi·ªát cho c·ªôt HoTen, cho bi·∫øt sinh vi√™n v·ªõi HoTen t∆∞∆°ng ·ª©ng n·∫±m ·ªü v·ªã tr√≠ n√†o trong b·∫£ng th·ª±c t·∫ø (d·ªØ li·ªáu kh√¥ng b·ªã thay ƒë·ªïi s·∫Øp x·∫øp).
M·ªói l·∫ßn b·∫°n t√¨m ki·∫øm sinh vi√™n theo t√™n, c∆° s·ªü d·ªØ li·ªáu s·∫Ω d√πng non-clustered index ƒë·ªÉ t√¨m nhanh v·ªã tr√≠ trong b·∫£ng.


2. C√°ch t·∫°o index trong azure data studio
- Table name (Message): ƒê√¢y l√† t√™n c·ªßa b·∫£ng m√† b·∫°n ƒëang t·∫°o index. Trong tr∆∞·ªùng h·ª£p n√†y l√† b·∫£ng "Message".

- Indexes Tab: Tab n√†y cho ph√©p b·∫°n qu·∫£n l√Ω c√°c index hi·ªán c√≥ trong b·∫£ng v√† th√™m c√°c index m·ªõi.

- New Index: B·∫°n c√≥ th·ªÉ nh·∫•p v√†o ƒë√¢y ƒë·ªÉ t·∫°o m·ªôt index m·ªõi cho b·∫£ng.

- Name: ƒê√¢y l√† t√™n c·ªßa index. Trong h√¨nh, b·∫°n ƒë·∫∑t t√™n index l√† Index_Message_Content.

- Columns: Ph·∫ßn n√†y cho ph√©p b·∫°n ch·ªçn c√°c c·ªôt m√† b·∫°n mu·ªën t·∫°o index. ·ªû ƒë√¢y, c·ªôt Content ƒë∆∞·ª£c ch·ªçn v·ªõi t√πy ch·ªçn Ascending (s·∫Øp x·∫øp theo th·ª© t·ª± tƒÉng d·∫ßn).

- Is Clustered: M·ªôt clustered index s·∫Øp x·∫øp d·ªØ li·ªáu v·∫≠t l√Ω trong b·∫£ng theo th·ª© t·ª± c·ªßa index. M·ªói b·∫£ng ch·ªâ c√≥ th·ªÉ c√≥ m·ªôt clustered index v√¨ d·ªØ li·ªáu v·∫≠t l√Ω trong b·∫£ng ch·ªâ c√≥ th·ªÉ s·∫Øp x·∫øp theo m·ªôt th·ª© t·ª± duy nh·∫•t. N·∫øu b·∫°n tick v√†o √¥ n√†y, b·∫°n s·∫Ω t·∫°o m·ªôt clustered index. N·∫øu kh√¥ng tick, th√¨ b·∫°n t·∫°o m·ªôt non-clustered index.

- Is Unique: N·∫øu ch·ªçn √¥ n√†y, index s·∫Ω ƒë∆∞·ª£c t·∫°o d∆∞·ªõi d·∫°ng Unique Index, c√≥ nghƒ©a l√† c√°c gi√° tr·ªã trong c·ªôt ho·∫∑c c√°c c·ªôt t·∫°o index ph·∫£i l√† duy nh·∫•t. Index n√†y ƒë·∫£m b·∫£o r·∫±ng kh√¥ng c√≥ hai h√†ng n√†o c√≥ gi√° tr·ªã gi·ªëng nhau cho c√°c c·ªôt ƒë∆∞·ª£c l·∫≠p ch·ªâ m·ª•c.

- Is Enabled: T√πy ch·ªçn n√†y cho ph√©p b·∫°n b·∫≠t ho·∫∑c t·∫Øt index. Khi t·∫°o m·ªôt index m·ªõi, n√™n ƒë·ªÉ ch·∫ø ƒë·ªô n√†y ƒë∆∞·ª£c b·∫≠t ƒë·ªÉ n√≥ c√≥ th·ªÉ ho·∫°t ƒë·ªông.

- Filter Predicate: ƒê√¢y l√† ph·∫ßn m·ªü r·ªông cho ph√©p b·∫°n ch·ªâ ƒë·ªãnh ƒëi·ªÅu ki·ªán l·ªçc cho index. V√≠ d·ª•, b·∫°n c√≥ th·ªÉ ch·ªâ mu·ªën l·∫≠p ch·ªâ m·ª•c m·ªôt t·∫≠p h·ª£p con c·ªßa d·ªØ li·ªáu trong b·∫£ng thay v√¨ to√†n b·ªô b·∫£ng.

- Included Columns: Ph·∫ßn n√†y cho ph√©p b·∫°n th√™m c√°c c·ªôt kh√°c m√† b·∫°n mu·ªën bao g·ªìm trong index nh∆∞ng kh√¥ng ph·∫£i l√† m·ªôt ph·∫ßn c·ªßa kh√≥a ch·ªâ m·ª•c. C√°c c·ªôt n√†y c√≥ th·ªÉ c·∫£i thi·ªán hi·ªáu su·∫•t khi truy v·∫•n c√°c c·ªôt kh√¥ng n·∫±m trong kh√≥a ch√≠nh nh∆∞ng n·∫±m trong k·∫øt qu·∫£ truy v·∫•n.

3. C√°ch vi·∫øt c√¢u l·ªánh c·ª• th·ªÉ

- T·∫°o index b√¨nh th∆∞·ªùng: 
ALTER TABLE Account ADD CONSTRAINT UQ_Account_UserName UNIQUE (UserName);

- T·∫°o full text index:
üöÄ T·∫°o Full-Text Index trong Azure Data Studio
Full-Text Index gi√∫p t√¨m ki·∫øm d·ªØ li·ªáu vƒÉn b·∫£n hi·ªáu qu·∫£ h∆°n trong SQL Server. ƒê·ªÉ t·∫°o Full-Text Index, b·∫°n c√≥ th·ªÉ l√†m nh∆∞ sau:

1Ô∏è‚É£ Ki·ªÉm tra v√† b·∫≠t Full-Text Search tr√™n SQL Server
Ch·∫°y l·ªánh sau ƒë·ªÉ ki·ªÉm tra xem Full-Text Search ƒë√£ ƒë∆∞·ª£c b·∫≠t ch∆∞a:

	SELECT SERVERPROPERTY('IsFullTextInstalled') AS FullTextInstalled;

N·∫øu k·∫øt qu·∫£ tr·∫£ v·ªÅ 1, nghƒ©a l√† Full-Text Search ƒë√£ ƒë∆∞·ª£c c√†i ƒë·∫∑t.
N·∫øu 0, b·∫°n c·∫ßn c√†i ƒë·∫∑t t√≠nh nƒÉng n√†y trong SQL Server.

2Ô∏è‚É£ T·∫°o Full-Text Catalog
Full-Text Catalog l√† n∆°i l∆∞u tr·ªØ ch·ªâ m·ª•c to√†n vƒÉn (Full-Text Index).

	CREATE FULLTEXT CATALOG MyFullTextCatalog AS DEFAULT;

3Ô∏è‚É£ T·∫°o Full-Text Index tr√™n m·ªôt b·∫£ng
Gi·∫£ s·ª≠ b·∫°n c√≥ b·∫£ng Products v·ªõi c·ªôt Description, b·∫°n c√≥ th·ªÉ t·∫°o Full-Text Index nh∆∞ sau:

	CREATE FULLTEXT INDEX ON Products(Description LANGUAGE 1033)
	KEY INDEX PK_Products
	ON MyFullTextCatalog;

Description: C·ªôt c·∫ßn l·∫≠p ch·ªâ m·ª•c.
LANGUAGE 1033: M√£ ng√¥n ng·ªØ (1033 l√† ti·∫øng Anh, n·∫øu d√πng ti·∫øng Vi·ªát, thay b·∫±ng 1066).
PK_Products: T√™n Primary Key c·ªßa b·∫£ng (Full-Text Index y√™u c·∫ßu b·∫£ng c√≥ kh√≥a ch√≠nh).


ƒê·ªÉ s·ª≠ d·ª•ng t√¨m ki·∫øm c√≥ fulltext index ta code nh∆∞ sau:
var premium = await _unitOfWork.GetRepository<Premium>()
    .GetPagingListAsync(
        selector: a => _mapper.Map<CreatePremiumResponse>(a),
        predicate: a => a.IsActive && EF.Functions.Contains(a.Description, "coffee"), // D√πng Full-Text Index
        page: page,
        size: size
    );
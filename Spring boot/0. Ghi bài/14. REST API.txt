I. API là gì?
- API là một tập hợp các quy tắc, giao thức và công cụ cho phép hai phần mềm tương tác và trao đổi dữ liệu với nhau.
- Nó định nghĩa các phương thức và định dạng dữ liệu mà các ứng dụng khác nhau có thể sử dụng để giao tiếp và tương tác với nhau.

II. REST là gì?
1. Khái niệm
- Là một kiến túc phần mềm được sử dụng trong lập trình web để thiết kế các dịch vụ web dựa trên giao thức HTTP.

2. Nguyên tắc cơ bản của REST
- Tài nguyên (resource): Tài nguyên là các đối tượng có thể được truy cập hoặc được thao tác trong dịch vụ web. Mỗi tài nguyên được đại diện bằng 1 URI duy nhất.
* URL vs URI: URL là Uniform Resource Locator vị trí của tài nguyên. URI là Uniform Resource Identifier định danh cho tài nguyên đó. => Cho vị trí và cho tên.

- Giao thức HTTP: "Hypertext Transfer Protocol" (Giao thức Truyền tải Siêu văn bản). Có các phương thức như Get, Post, Put, Delete. GET - Read, POST - Create, Put - Update, DELETE - Delete.

- Định dạng dữ liệu: JSON (JavaScript Object Notation) và XML (eXtensible Markup Language)

- Không trạng thái (Statelessness): REST sẽ tuân thủ nguyên tắc không trạng thái, nghĩa là 1 API chữa đủ thông tin để máy chủ hiểu và xử lý, không cần biết trạng thái hay hạnh động trước đó là gì.

III. Mã trạng thái với REST
- 100-199: Thông tin
- 200-299: Thành công
- 300-399: Chuyển hướng
- 400-499: Lỗi phía client
- 500-599: Lỗi phĩa server

V. Spring REST Controller

1. @RestController
- Là một annotation trong Spring Framework được sử dụng để đánh dấu một lớp trong ứng dụng là một RESTfulController.
- Là sự kết hợp của @Controller và ResponseBody
- Annotation này đánh dấu đây là class nhận các RESTful từ client và trả về JSON hoặc XML thông qua @ResponseBody

2. @RequestMapping
- Là một annotation trong Spring được sử dụng để ánh xạ các yêu cầu HTTP tới các phương thức trong một Controller.
- Nó xác định đường dẫn URL và phương thức HTTP mà một phương thức cụ thể trong Controller sẽ xử lý.
- Nó thường được đặt ở cấp Class và trở thành tiền tố cho tất cả các phương thức trong Controller.
I. Thymeleaf là gì?
- Thymeleaf expression là một loại biểu thức sử dụng trong Thymeleaf templates để xử lý và hiển thị dữ liệu động từ các đối tượng Java vào các template HTML.
- Cú pháp của Thymeleaf expression thường được đặt trong các thuộc tính của các thẻ HTML, hoặc trong nội dung của các thẻ đặc biệt như th:block, th:text, th:if, th:each,... Các biểu thức Thymeleaf bắt đầu bằng tiền tố th:

- Để gửi thông tin đến UI, FE, Thymeleaf ta phải dùng đối tượng model(ở JSP thì nò là request, response)

II. Cách thêm thymeleaf, bootstrap vào html
1. Thêm thymeleaf
- Ở phần thẻ html ở đầu trang ta sửa thành:
<html lang="en" xmlns:th="http://www.thymeleaf.com">

2. Thêm bootstrap online
- Tìm kiếm bootstrap trên google vào trang đầu tiên
- https://getbootstrap.com/docs/5.3/getting-started/introduction/
- Vào doc của nó và đọc cách thêm link và script của bootstrap
- Link đặt dưới title ở head, còn script đặt trong body ở dưới cùng

3. Thêm bootstrap offline
- Tải bootstrap về từ: https://getbootstrap.com/docs/5.3/getting-started/introduction/
- Giải nén, và vào trong copy 2 file css và js
- Thêm nó vào phần resources/static
- Thêm link và script như bên trên nhưng không dùng link online mà trỏ đường dẫn tới file off.
- Thêm:
	<link th:href="@{../css/bootstrap.min.css}" rel="stylesheet"/>
	
	<script th:src="@{../js/bootstrap.bundle.min.js}">

=> Cần phải thêm th: khác với thêm online

=============================================

III. Spring MVC
1. Các thành phần
- DispatcherServlet: Là một Servlet đặc biệt trong Spring MVC, nó là trung tâm điều khiển của toàn bộ ứng dụng. DispatcherServlet nhận yêu cầu từ người dùng và gửi nó tới Controller phù hợp để xử lý.

- Controller: Là thành phần xử lý logic trong ứng dụng, nhận yêu cầu từ DispatcherServlet, tương tác với Model để lấy hoặc cập nhật dữ liệu, sau đó trả về dữ liệu cho DispatcherServlet để hiển thị thông tị lên View

- Model: Đại diện cho dữ liệu của ứng dụng, chứa các lớp POJO để lưu trữ thông tin. Model cũng chịu trách nhiệm xử lý logic liên quan đến dữ liệu.

- View: là giao diện người dùng, hiển thị dữ liệu từ Model cho người dùng. Spring hỗ trợ nhiều công nghệ View khác nhau như JSP, Thymeleaf, Freemarker,...